<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="initial-scale=1.0">
<meta charset="utf-8">
<title>{{ title }}</title>
<link rel="stylesheet" href="{{ asset('css/style.css') }}" />
<style>
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
    #header {
        height: 4.5em;
    }
    #header #form_types { display: inline-block; border: 1px solid #aaa; margin: 0 5px; border-radius: 4px; }
    #header #form_types div { float: left; padding: 2px 4px; margin: 0; }
    #map {
        height: 80%; overflow: auto; border: 1px solid #aaa;
    }
    h1 { margin: 0.125em 5px; white-space: nowrap; }
    .gm-style-iw h2 {
        margin: 0.25em 0;
    }
    .gm-style-iw p {
        margin: 0.25em 0;
    }
</style>
</head>
<body>
<div id="header">
    <h1>{{ title }}</h1>
    <div id="form_types">
{% for type,settings in types %}
    <div class="type_{{ settings.class|lower }}"><label><input type="checkbox" id="layer_{{ type }}" checked="checked" />{{ settings.label }}</label></div>
{% endfor %}
    </div>
</div>
<div id="map"></div>
<script>
//<!--
var layers = [], map, qth, qthInfo;

function initMap() {
    var qthLatLng = {lat: {{ lat }}, lng: {{ lon}} };

    map = new google.maps.Map(document.getElementById('map'), {
        center: qthLatLng,
        scaleControl: true,
        zoomControl: true,
        zoom: 6,
    });

    var icon = {
        url: "http://maps.google.com/mapfiles/kml/pushpin/red-pushpin.png",
        scaledSize: new google.maps.Size(30, 30),
        origin: new google.maps.Point(0,0),
        anchor: new google.maps.Point(0,0)
    };

    qthInfo = new google.maps.InfoWindow({
        content:
            "<h2>{{ listener.name|raw }}</h2>" +
            "<p>{{ listener.qth|raw }}{% if (listener.sp) %}, {{ listener.sp }}{% endif %}, {{ listener.itu }}</p>"
    });

    qth = new google.maps.Marker({
        position: qthLatLng,
        map: map,
        icon: icon,
        title: "{{ listener.name|raw }}"
    });

    qth.addListener('click', function() {
        qthInfo.open(map, qth);
    });

{% for type,settings in types %}
    layers[{{ type }}] = new google.maps.KmlLayer({
        url: '{{ url('listener_export_signals_kml', { 'system' : system, 'id' : id, 'type' : type }) }}?v=' + (new Date()).getTime(),
        map: map
    });
{% endfor %}

    function toggleLayers(i) {
        if (layers[i].getMap() == null) {
            layers[i].setMap(map);
        } else {
            layers[i].setMap(null);
        }
        // google.maps.event.addListener(layers[i], 'status_changed', function() {
        //     document.getElementById('status').innerHTML += "toggleLayers(" + i + ") [setMap(" + layers[i].getMap() + "] returns status: " + layers[i].getStatus() + "<br>";
        // });
    }

{% for type,settings in types %}
    google.maps.event.addDomListener(document.getElementById('layer_{{ type }}'), 'click', function(evt) {
        toggleLayers({{ type }});
    });
{% endfor %}

}
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCmvsfY0bgnVB-gl_nMHGQ71rp1WTz9tGM&callback=initMap">
</script>
</body>
</html>